import React from 'react';
import { motion } from 'framer-motion';
import { HiMail, HiLocationMarker, HiPhone } from 'react-icons/hi';
import { FaFacebook, FaInstagram, FaLinkedin } from 'react-icons/fa';

interface ContactProps {
Â  isDark: boolean;
}

const Contact: React.FC<ContactProps> = ({ isDark }) => {
Â  const mainText = isDark ? 'text-white' : 'text-gray-900';
Â  const subText = isDark ? 'text-gray-300' : 'text-gray-700';
Â  const cardBg = isDark ? 'bg-gray-800/50 border border-gray-700' : 'bg-white border border-gray-200';
Â  const iconBg = isDark ? 'bg-gray-700/50' : 'bg-gray-200';
Â  const socialIconBg = isDark ? 'bg-gray-700 hover:bg-orange-500' : 'bg-white border border-gray-300 hover:bg-orange-500';

Â  const contactInfo = [
Â  Â  {
Â  Â  Â  icon: HiLocationMarker,
Â  Â  Â  title: 'Our Office',
Â  Â  Â  details: 'House No. 14, Chandrakant Bhavan, Chimat Pada, Marol Naka, Andheri East, Mumbai 400059. Near Marol Naka Metro Station.',
Â  Â  Â  link: 'https://www.google.com/maps?q=19.1055111,72.8785601&z=17&hl=en',
Â  Â  Â  type: 'address'
Â  Â  },
Â  Â  {
Â  Â  Â  icon: HiMail,
Â  Â  Â  title: 'Email Us',
Â  Â  Â  details: 'Info@sharmabusiness.in',
Â  Â  Â  link: 'mailto:Info@sharmabusiness.in',
Â  Â  Â  type: 'email'
Â  Â  },
Â  Â  {
Â  Â  Â  icon: HiPhone,
Â  Â  Â  title: 'Call Us',
Â  Â  Â  details: [
Â  Â  Â  Â  { number: '99308 86758', link: 'tel:+919930886758' },
Â  Â  Â  Â  { number: '99308 86785', link: 'tel:+919930886785' }
Â  Â  Â  ],
Â  Â  Â  type: 'phone'
Â  Â  },
Â  ];
Â  
Â  const socialLinks = [
Â  Â  { 
Â  Â  Â  icon: FaFacebook, 
Â  Â  Â  href: 'https://www.facebook.com/people/Sharma-Business/61558862323469/', 
Â  Â  Â  name: 'Facebook'
Â  Â  },
Â  Â  { 
Â  Â  Â  icon: FaInstagram, 
Â  Â  Â  href: 'https://www.instagram.com/_sharmabusiness', 
Â  Â  Â  name: 'Instagram'
Â  Â  },
Â  Â  { 
Â  Â  Â  icon: FaLinkedin, 
Â  Â  Â  href: 'https://www.linkedin.com/company/sharma-business/', 
Â  Â  Â  name: 'LinkedIn'
Â  Â  },
Â  ];

Â  // Helper function to render individual contact cards
Â  const renderContactCard = (item: any, index: number) => {
Â  Â  let content;

Â  Â  if (item.type === 'phone') {
Â  Â  Â  content = (
Â  Â  Â  Â  <div className="space-y-1">
Â  Â  Â  Â  Â  {item.details.map((phoneDetail: { number: string, link: string }, phoneIndex: number) => (
Â  Â  Â  Â  Â  Â  <a
Â  Â  Â  Â  Â  Â  Â  key={phoneIndex}
Â  Â  Â  Â  Â  Â  Â  href={phoneDetail.link}
Â  Â  Â  Â  Â  Â  Â  // Text size restored to original 'text-base'
Â  Â  Â  Â  Â  Â  Â  className={`block text-base font-medium ${subText} hover:text-orange-500 transition-colors duration-200 break-words`} 
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  {phoneDetail.number}
Â  Â  Â  Â  Â  Â  </a>
Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  </div>
Â  Â  Â  );
Â  Â  } else {
Â  Â  Â  content = (
Â  Â  Â  Â  <a 
Â  Â  Â  Â  Â  href={item.link} 
Â  Â  Â  Â  Â  target={item.link.startsWith('http') || item.link.startsWith('mailto') ? "_blank" : "_self"}
Â  Â  Â  Â  Â  rel="noopener noreferrer"
Â  Â  Â  Â  Â  // Text size restored to original 'text-base'
Â  Â  Â  Â  Â  className={`block text-base font-medium ${subText} hover:text-orange-500 transition-colors duration-200 break-words`}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  {item.details}
Â  Â  Â  Â  </a>
Â  Â  Â  );
Â  Â  }

Â  Â  return (
Â  Â  Â  <div
Â  Â  Â  Â  key={index}
Â  Â  Â  Â  // Padding restored to p-6 (or use p-5 for slight reduction)
Â  Â  Â  Â  className={`p-6 rounded-2xl ${cardBg} shadow-lg transition-all duration-300 hover:shadow-xl flex flex-col items-start lg:items-center text-left lg:text-center`}
Â  Â  Â  >
Â  Â  Â  Â  {/* Icon and Title/Content Wrapper - Mobile View (Applies up to lg size, i.e., including all your target pixels) */}
Â  Â  Â  Â  <div className="flex items-start lg:hidden w-full">
Â  Â  Â  Â  Â  <div 
Â  Â  Â  Â  Â  Â  className={`w-16 h-16 mr-4 mb-0 rounded-xl flex items-center justify-center flex-shrink-0 ${iconBg}`}
Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  <item.icon className="w-8 h-8 text-orange-600" />
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  
Â  Â  Â  Â  Â  <div className="flex-grow min-w-0"> 
Â  Â  Â  Â  Â  Â  <h3 className={`text-xl font-bold mb-2 ${mainText}`}>{item.title}</h3>
Â  Â  Â  Â  Â  Â  <div className={`block ${item.type !== 'phone' ? 'mb-2' : ''}`}> 
Â  Â  Â  Â  Â  Â  Â  {content}
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  Â  
Â  Â  Â  Â  {/* Desktop View - Centered Content (This will ONLY apply above 1024px) */}
Â  Â  Â  Â  <div className="hidden lg:flex lg:flex-col lg:items-center w-full h-full"> 
Â  Â  Â  Â  Â  Â  <div 
Â  Â  Â  Â  Â  Â  Â  Â  className={`w-16 h-16 mx-auto mb-4 rounded-xl flex items-center justify-center flex-shrink-0 ${iconBg}`}
Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  <item.icon className="w-8 h-8 text-orange-600" />
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  <h3 className={`text-xl font-bold mb-2 ${mainText}`}>{item.title}</h3>
Â  Â  Â  Â  Â  Â  <div className='flex-grow flex flex-col justify-center'>
Â  Â  Â  Â  Â  Â  Â  Â  {content}
Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </div>
Â  Â  Â  </div>
Â  Â  );
Â  };
Â  
Â  return (
Â  Â  <section 
Â  Â  Â  id="contact" 
Â  Â  Â  className={`py-10 ${isDark ? 'bg-gray-900' : 'bg-gray-50'} scroll-mt-20`}
Â  Â  >
Â  Â  Â  {/* ðŸŽ¯ MODIFIED: max-w-6xl à¤•à¥‹ max-w-7xl à¤®à¥‡à¤‚ à¤¬à¤¦à¤²à¤¾ à¤—à¤¯à¤¾ à¤¹à¥ˆà¥¤ */}
Â  Â  Â  <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
Â  Â  Â  Â  <motion.div
Â  Â  Â  Â  Â  className="text-center mb-12"
Â  Â  Â  Â  Â  initial={{ opacity: 0, y: 30 }}
Â  Â  Â  Â  Â  whileInView={{ opacity: 1, y: 0 }}
Â  Â  Â  Â  Â  transition={{ duration: 0.6 }}
Â  Â  Â  Â  Â  viewport={{ once: true }}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  <h2 className={`text-4xl font-bold mb-4 ${mainText}`}>
Â  Â  Â  Â  Â  Â  Get in Touch
Â  Â  Â  Â  Â  </h2>
Â  Â  Â  Â  Â  <p className={`text-xl ${subText} max-w-2xl mx-auto`}>
Â  Â  Â  Â  Â  Â  We'd love to hear from you. Find us using the details below.
Â  Â  Â  Â  Â  </p>
Â  Â  Â  Â  </motion.div>

Â  Â  Â  Â  {/* Info Cards Grid */}
Â  Â  Â  Â  <motion.div
Â  Â  Â  Â  Â  // âœ… FIX: Changed md:grid-cols-3 to lg:grid-cols-3. 
Â  Â  Â  Â  Â  // This ensures that all target resolutions (768-912px) use the default grid-cols-1 (single column)
Â  Â  Â  Â  Â  className="grid grid-cols-1 lg:grid-cols-3 gap-8 mb-12"
Â  Â  Â  Â  Â  initial={{ opacity: 0, y: 50 }}
Â  Â  Â  Â  Â  whileInView={{ opacity: 1, y: 0 }}
Â  Â  Â  Â  Â  transition={{ duration: 0.7, delay: 0.2 }}
Â  Â  Â  Â  Â  viewport={{ once: true }}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  {contactInfo.map((item, index) => renderContactCard(item, index))}
Â  Â  Â  Â  </motion.div>
Â  Â  Â  Â  
Â  Â  Â  Â  {/* Social Links Section */}
Â  Â  Â  Â  <motion.div
Â  Â  Â  Â  Â  className="text-center"
Â  Â  Â  Â  Â  initial={{ opacity: 0, y: 30 }}
Â  Â  Â  Â  Â  whileInView={{ opacity: 1, y: 0 }}
Â  Â  Â  Â  Â  transition={{ duration: 0.6, delay: 0.4 }}
Â  Â  Â  Â  Â  viewport={{ once: true }}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  <h3 className={`text-xl sm:text-2xl font-semibold sm:font-bold mb-6 ${mainText}`}>
Â  Â  Â  Â  Â  Â  Connect with us on Social Media
Â  Â  Â  Â  Â  </h3>
Â  Â  Â  Â  Â  <div className="flex justify-center space-x-6">
Â  Â  Â  Â  Â  Â  {socialLinks.map((social, index) => (
Â  Â  Â  Â  Â  Â  Â  <a
Â  Â  Â  Â  Â  Â  Â  Â  key={index}
Â  Â  Â  Â  Â  Â  Â  Â  href={social.href}
Â  Â  Â  Â  Â  Â  Â  Â  target="_blank"
Â  Â  Â  Â  Â  Â  Â  Â  rel="noopener noreferrer"
Â  Â  Â  Â  Â  Â  Â  Â  className={`p-4 rounded-full shadow-lg transition-all duration-300 transform hover:scale-110 ${socialIconBg}`}
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  <social.icon className={`w-6 h-6 ${isDark ? 'text-gray-300' : 'text-gray-600'} hover:text-white transition-colors`} />
Â  Â  Â  Â  Â  Â  Â  </a>
Â  Â  Â  Â  Â  Â  ))}
Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  </motion.div>
Â  Â  Â  </div>
Â  Â  </section>
Â  );
};

export default Contact;